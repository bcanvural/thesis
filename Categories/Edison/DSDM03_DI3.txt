    Enterprise information integration (EII), is the ability to support a unified view of data and information for an entire organization. In a data virtualization application of EII, a process of information integration, using data abstraction to provide a unified interface (known as uniform data access) for viewing all the data within an organization, and a single set of structures and naming conventions (known as uniform information representation) to represent this data; the goal of EII is to get a large set of heterogeneous data sources to appear to a user or system as a single, homogeneous data source.

Contents

    1 Overview
    2 Applications
    3 Data access technologies
    4 See also
    5 References

Overview

Data within an enterprise can be stored in heterogeneous formats, including relational databases (which themselves come in a large number of varieties), text files, XML files, spreadsheets and a variety of proprietary storage methods, each with their own indexing and data access methods.

Standardized data access APIs have emerged, that offer a specific set of commands to retrieve and modify data from a generic data source. Many applications exist that implement these APIs' commands across various data sources, most notably relational databases. Such APIs include ODBC, JDBC, XQJ, OLE DB, and more recently ADO.NET.

There are also standard formats for representing data within a file, that are very important to information integration. The best-known of these is XML, which has emerged as a standard universal representation format. There are also more specific XML "grammars" defined for specific types of data, such as Geography Markup Language for expressing geographical features, and Directory Service Markup Language, for holding directory-style information. In addition, non-XML standard formats exist, such as iCalendar, for representing calendar information, and vCard, for business card information.

Enterprise Information Integration (EII) applies data integration commercially. Despite the theoretical problems described above, the private sector shows more concern with the problems of data integration as a viable product.[1] EII emphasizes neither on correctness nor tractability, but speed and simplicity. An EII industry has emerged, but many professionals[who?] believe it does not perform to its full potential. Practitioners cite the following major issues which EII must address for the industry to become mature:[citation needed]

Combining disparate data sets 
    Each data source is disparate and as such is not designed to support EII. Therefore, data virtualization as well as data federation depends upon accidental data commonality to support combining data and information from disparate data sets. Because of this lack of data value commonality across data sources, the return set may be inaccurate, incomplete, and impossible to validate.

    One solution is to recast disparate databases to integrate these databases without the need for ETL. The recast databases support commonality constraints where referential integrity may be enforced between databases. The recast databases provide designed data access paths with data value commonality across databases.
Simplicity of understanding 
    Answering queries with views arouses interest from a theoretical standpoint, but difficulties in understanding how to incorporate it as an "enterprise solution".[citation needed] Some developers[who?] believe it should be merged with EAI. Others[who?] believe it should be incorporated with ETL systems, citing customers' confusion over the differences between the two services.[citation needed]
Simplicity of deployment 
    Even if recognized as a solution to a problem, EII as of 2009 currently takes time to apply and offers complexities in deployment. People have proposed a variety of schema-less solutions such as "Lean Middleware",[2] but ease-of-use and speed of employment appear inversely proportional to the generality of such systems.[citation needed] Others[who?] cite the need for standard data interfaces to speed and simplify the integration process in practice.
Handling higher-order information 
    Analysts experience difficulty — even with a functioning information integration system — in determining whether the sources in the database will satisfy a given application. Answering these kinds of questions about a set of repositories requires semantic information like metadata and/or ontologies. The few commercial tools[which?] that leverage this information remain in their infancy.

Applications

EII products enable loose coupling between homogeneous-data consuming client applications and services and heterogeneous-data stores. Such client applications and services include Desktop Productivity Tools (spreadsheets, word processors, presentation software, etc.), development environments and frameworks (Java EE, .NET, Mono, SOAP or RESTful Web services, etc.), business intelligence (BI), business activity monitoring (BAM) software, enterprise resource planning (ERP), Customer relationship management (CRM), business process management (BPM and/or BPEL) Software, and web content management (CMS).
Data access technologies

    XQuery and XQuery API for Java
    Service Data Objects (SDO) for Java, C++ and .Net clients and any type of data source

See also

    Big structure
    Business Intelligence 2.0 (BI 2.0)
    Data integration
    Data warehouse
    Disparate system
    Enterprise integration
    Federated database system
    Resource Description Framework
    Semantic heterogeneity
    Semantic integration
    Semantic Web
    Web 2.0
    Web services
